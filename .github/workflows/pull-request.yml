# Copyright Â© 2023 OpenIM. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Github Pull Request
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
      - name: Setup Go
        uses: actions/setup-go@v4
      - name: Run go modules tidy
        run: |
          sudo apt-get install jq
          sudo make tidy
          sudo make tools.verify.go-gitlint
          echo "Run go modules tidy successfully" 
        continue-on-error: true

      - name: Run go format and lint
        run: |
          sudo make format
          echo "Run go format successfully" 
        continue-on-error: true

      - name: Run go lint
        run: |
          sudo make lint
          echo "Run go lint successfully" 
        continue-on-error: true

      - name: Generate all necessary files, such as error code files
        run: |
          make generate
          ./scripts/init-config.sh --examples --force
          echo "Generate all necessary files successfully"
        continue-on-error: true

      - name: Generate Vertions
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo $latest_tag > pkg/common/config/version
        continue-on-error: true

      - name: Run unit test and get test coverage
        run: |
          make cover
          echo "Run unit test and get test coverage successfully" 
        continue-on-error: true

      - name: OpenIM verify copyright
        run: |
          sudo make verify-copyright
          sudo make add-copyright
          echo "OpenIM verify successfully" 
        continue-on-error: true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          commit-message: "cicd: bump League Patch"
          author: kubbot <3293172751ysy@gmail.com>
          committer: kubbot <3293172751ysy@gmail.com>
        #   signoff: false
        #   draft: false
          branch: "asf-auto-updates"
          assignees: cubxxw
          reviewers: cubxxw
          title: "Bump League Patch auto PR: $(date +'%Y%m%d')"
          body: |
            Review criteria:

            - [ ] Disenchanter can connect and issue actions
            
            This is an automated PR. @ $(date +'%Y%m%d')
            <sub>[workflow](https://github.com/openimsdk/open-im-server/blob/main/.github/workflows/pull-request.yml).</sub>
          labels: |
            kind/documentation
            enhancement
            report
