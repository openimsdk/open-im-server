// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.5
// source: office/office.proto

package office

import (
	sdk_ws "Open_IM/pkg/proto/sdk_ws"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type TagUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *TagUser) Reset() {
	*x = TagUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagUser) ProtoMessage() {}

func (x *TagUser) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagUser.ProtoReflect.Descriptor instead.
func (*TagUser) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{1}
}

func (x *TagUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *TagUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagID    string     `protobuf:"bytes,1,opt,name=tagID,proto3" json:"tagID,omitempty"`
	TagName  string     `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
	UserList []*TagUser `protobuf:"bytes,3,rep,name=userList,proto3" json:"userList,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{2}
}

func (x *Tag) GetTagID() string {
	if x != nil {
		return x.TagID
	}
	return ""
}

func (x *Tag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *Tag) GetUserList() []*TagUser {
	if x != nil {
		return x.UserList
	}
	return nil
}

type GetUserTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetUserTagsReq) Reset() {
	*x = GetUserTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagsReq) ProtoMessage() {}

func (x *GetUserTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagsReq.ProtoReflect.Descriptor instead.
func (*GetUserTagsReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserTagsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserTagsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Tags       []*Tag      `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetUserTagsResp) Reset() {
	*x = GetUserTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagsResp) ProtoMessage() {}

func (x *GetUserTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagsResp.ProtoReflect.Descriptor instead.
func (*GetUserTagsResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserTagsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserTagsResp) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreateTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagName     string   `protobuf:"bytes,1,opt,name=tagName,proto3" json:"tagName,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	UserIDList  []string `protobuf:"bytes,3,rep,name=userIDList,proto3" json:"userIDList,omitempty"`
	OperationID string   `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *CreateTagReq) Reset() {
	*x = CreateTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagReq) ProtoMessage() {}

func (x *CreateTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagReq.ProtoReflect.Descriptor instead.
func (*CreateTagReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *CreateTagReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateTagReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

func (x *CreateTagReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CreateTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *CreateTagResp) Reset() {
	*x = CreateTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResp) ProtoMessage() {}

func (x *CreateTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResp.ProtoReflect.Descriptor instead.
func (*CreateTagResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTagResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TagID       string `protobuf:"bytes,2,opt,name=tagID,proto3" json:"tagID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *DeleteTagReq) Reset() {
	*x = DeleteTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagReq) ProtoMessage() {}

func (x *DeleteTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagReq.ProtoReflect.Descriptor instead.
func (*DeleteTagReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTagReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteTagReq) GetTagID() string {
	if x != nil {
		return x.TagID
	}
	return ""
}

func (x *DeleteTagReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type DeleteTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteTagResp) Reset() {
	*x = DeleteTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResp) ProtoMessage() {}

func (x *DeleteTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResp.ProtoReflect.Descriptor instead.
func (*DeleteTagResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTagResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID             string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TagID              string   `protobuf:"bytes,2,opt,name=tagID,proto3" json:"tagID,omitempty"`
	NewName            string   `protobuf:"bytes,3,opt,name=newName,proto3" json:"newName,omitempty"`
	IncreaseUserIDList []string `protobuf:"bytes,4,rep,name=increaseUserIDList,proto3" json:"increaseUserIDList,omitempty"`
	ReduceUserIDList   []string `protobuf:"bytes,5,rep,name=reduceUserIDList,proto3" json:"reduceUserIDList,omitempty"`
	OperationID        string   `protobuf:"bytes,6,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *SetTagReq) Reset() {
	*x = SetTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTagReq) ProtoMessage() {}

func (x *SetTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTagReq.ProtoReflect.Descriptor instead.
func (*SetTagReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{9}
}

func (x *SetTagReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetTagReq) GetTagID() string {
	if x != nil {
		return x.TagID
	}
	return ""
}

func (x *SetTagReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *SetTagReq) GetIncreaseUserIDList() []string {
	if x != nil {
		return x.IncreaseUserIDList
	}
	return nil
}

func (x *SetTagReq) GetReduceUserIDList() []string {
	if x != nil {
		return x.ReduceUserIDList
	}
	return nil
}

func (x *SetTagReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SetTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *SetTagResp) Reset() {
	*x = SetTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTagResp) ProtoMessage() {}

func (x *SetTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTagResp.ProtoReflect.Descriptor instead.
func (*SetTagResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{10}
}

func (x *SetTagResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SendMsg2TagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagList          []string `protobuf:"bytes,1,rep,name=tagList,proto3" json:"tagList,omitempty"`
	UserList         []string `protobuf:"bytes,2,rep,name=UserList,proto3" json:"UserList,omitempty"`
	GroupList        []string `protobuf:"bytes,3,rep,name=GroupList,proto3" json:"GroupList,omitempty"`
	SendID           string   `protobuf:"bytes,4,opt,name=sendID,proto3" json:"sendID,omitempty"`
	SenderPlatformID int32    `protobuf:"varint,5,opt,name=senderPlatformID,proto3" json:"senderPlatformID,omitempty"`
	Content          string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	OperationID      string   `protobuf:"bytes,7,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *SendMsg2TagReq) Reset() {
	*x = SendMsg2TagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsg2TagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg2TagReq) ProtoMessage() {}

func (x *SendMsg2TagReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg2TagReq.ProtoReflect.Descriptor instead.
func (*SendMsg2TagReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{11}
}

func (x *SendMsg2TagReq) GetTagList() []string {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *SendMsg2TagReq) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SendMsg2TagReq) GetGroupList() []string {
	if x != nil {
		return x.GroupList
	}
	return nil
}

func (x *SendMsg2TagReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *SendMsg2TagReq) GetSenderPlatformID() int32 {
	if x != nil {
		return x.SenderPlatformID
	}
	return 0
}

func (x *SendMsg2TagReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMsg2TagReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SendMsg2TagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *SendMsg2TagResp) Reset() {
	*x = SendMsg2TagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsg2TagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg2TagResp) ProtoMessage() {}

func (x *SendMsg2TagResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg2TagResp.ProtoReflect.Descriptor instead.
func (*SendMsg2TagResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{12}
}

func (x *SendMsg2TagResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetTagSendLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	UserID      string                    `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID string                    `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetTagSendLogsReq) Reset() {
	*x = GetTagSendLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagSendLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagSendLogsReq) ProtoMessage() {}

func (x *GetTagSendLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagSendLogsReq.ProtoReflect.Descriptor instead.
func (*GetTagSendLogsReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{13}
}

func (x *GetTagSendLogsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTagSendLogsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetTagSendLogsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type TagSendLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*TagUser `protobuf:"bytes,1,rep,name=userList,proto3" json:"userList,omitempty"`
	Content  string     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	SendTime int64      `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
}

func (x *TagSendLog) Reset() {
	*x = TagSendLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagSendLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSendLog) ProtoMessage() {}

func (x *TagSendLog) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSendLog.ProtoReflect.Descriptor instead.
func (*TagSendLog) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{14}
}

func (x *TagSendLog) GetUserList() []*TagUser {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *TagSendLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TagSendLog) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

type GetTagSendLogsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination  *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TagSendLogs []*TagSendLog              `protobuf:"bytes,3,rep,name=tagSendLogs,proto3" json:"tagSendLogs,omitempty"`
}

func (x *GetTagSendLogsResp) Reset() {
	*x = GetTagSendLogsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagSendLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagSendLogsResp) ProtoMessage() {}

func (x *GetTagSendLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagSendLogsResp.ProtoReflect.Descriptor instead.
func (*GetTagSendLogsResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{15}
}

func (x *GetTagSendLogsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetTagSendLogsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTagSendLogsResp) GetTagSendLogs() []*TagSendLog {
	if x != nil {
		return x.TagSendLogs
	}
	return nil
}

type GetUserTagByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TagID       string `protobuf:"bytes,2,opt,name=tagID,proto3" json:"tagID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetUserTagByIDReq) Reset() {
	*x = GetUserTagByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTagByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagByIDReq) ProtoMessage() {}

func (x *GetUserTagByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagByIDReq.ProtoReflect.Descriptor instead.
func (*GetUserTagByIDReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserTagByIDReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserTagByIDReq) GetTagID() string {
	if x != nil {
		return x.TagID
	}
	return ""
}

func (x *GetUserTagByIDReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserTagByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Tag        *Tag        `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetUserTagByIDResp) Reset() {
	*x = GetUserTagByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTagByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagByIDResp) ProtoMessage() {}

func (x *GetUserTagByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagByIDResp.ProtoReflect.Descriptor instead.
func (*GetUserTagByIDResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserTagByIDResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserTagByIDResp) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type LikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *LikeUser) Reset() {
	*x = LikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeUser) ProtoMessage() {}

func (x *LikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeUser.ProtoReflect.Descriptor instead.
func (*LikeUser) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{18}
}

func (x *LikeUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LikeUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type NotificationUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *NotificationUser) Reset() {
	*x = NotificationUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUser) ProtoMessage() {}

func (x *NotificationUser) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUser.ProtoReflect.Descriptor instead.
func (*NotificationUser) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{19}
}

func (x *NotificationUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *NotificationUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	FaceURL       string `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	ReplyUserID   string `protobuf:"bytes,4,opt,name=replyUserID,proto3" json:"replyUserID,omitempty"`
	ReplyUserName string `protobuf:"bytes,5,opt,name=replyUserName,proto3" json:"replyUserName,omitempty"`
	ContentID     string `protobuf:"bytes,6,opt,name=contentID,proto3" json:"contentID,omitempty"`
	Content       string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime    int32  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{20}
}

func (x *Comment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Comment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Comment) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *Comment) GetReplyUserID() string {
	if x != nil {
		return x.ReplyUserID
	}
	return ""
}

func (x *Comment) GetReplyUserName() string {
	if x != nil {
		return x.ReplyUserName
	}
	return ""
}

func (x *Comment) GetContentID() string {
	if x != nil {
		return x.ContentID
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type PermissionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	GroupID   string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *PermissionGroup) Reset() {
	*x = PermissionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGroup) ProtoMessage() {}

func (x *PermissionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGroup.ProtoReflect.Descriptor instead.
func (*PermissionGroup) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{21}
}

func (x *PermissionGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *PermissionGroup) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type WorkMomentUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *WorkMomentUser) Reset() {
	*x = WorkMomentUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkMomentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkMomentUser) ProtoMessage() {}

func (x *WorkMomentUser) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkMomentUser.ProtoReflect.Descriptor instead.
func (*WorkMomentUser) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{22}
}

func (x *WorkMomentUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *WorkMomentUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WorkMoment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMomentID        string             `protobuf:"bytes,1,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	UserID              string             `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName            string             `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	FaceURL             string             `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Content             string             `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	LikeUserList        []*WorkMomentUser  `protobuf:"bytes,6,rep,name=likeUserList,proto3" json:"likeUserList,omitempty"`
	Comments            []*Comment         `protobuf:"bytes,7,rep,name=comments,proto3" json:"comments,omitempty"`
	Permission          int32              `protobuf:"varint,8,opt,name=permission,proto3" json:"permission,omitempty"`
	PermissionUserList  []*WorkMomentUser  `protobuf:"bytes,9,rep,name=permissionUserList,proto3" json:"permissionUserList,omitempty"`
	PermissionGroupList []*PermissionGroup `protobuf:"bytes,10,rep,name=permissionGroupList,proto3" json:"permissionGroupList,omitempty"`
	AtUserList          []*WorkMomentUser  `protobuf:"bytes,11,rep,name=atUserList,proto3" json:"atUserList,omitempty"`
	CreateTime          int32              `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *WorkMoment) Reset() {
	*x = WorkMoment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkMoment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkMoment) ProtoMessage() {}

func (x *WorkMoment) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkMoment.ProtoReflect.Descriptor instead.
func (*WorkMoment) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{23}
}

func (x *WorkMoment) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *WorkMoment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *WorkMoment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *WorkMoment) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *WorkMoment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WorkMoment) GetLikeUserList() []*WorkMomentUser {
	if x != nil {
		return x.LikeUserList
	}
	return nil
}

func (x *WorkMoment) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *WorkMoment) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *WorkMoment) GetPermissionUserList() []*WorkMomentUser {
	if x != nil {
		return x.PermissionUserList
	}
	return nil
}

func (x *WorkMoment) GetPermissionGroupList() []*PermissionGroup {
	if x != nil {
		return x.PermissionGroupList
	}
	return nil
}

func (x *WorkMoment) GetAtUserList() []*WorkMomentUser {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

func (x *WorkMoment) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type CreateOneWorkMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMoment  *WorkMoment `protobuf:"bytes,1,opt,name=workMoment,proto3" json:"workMoment,omitempty"`
	OperationID string      `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *CreateOneWorkMomentReq) Reset() {
	*x = CreateOneWorkMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOneWorkMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneWorkMomentReq) ProtoMessage() {}

func (x *CreateOneWorkMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneWorkMomentReq.ProtoReflect.Descriptor instead.
func (*CreateOneWorkMomentReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{24}
}

func (x *CreateOneWorkMomentReq) GetWorkMoment() *WorkMoment {
	if x != nil {
		return x.WorkMoment
	}
	return nil
}

func (x *CreateOneWorkMomentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CreateOneWorkMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *CreateOneWorkMomentResp) Reset() {
	*x = CreateOneWorkMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOneWorkMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneWorkMomentResp) ProtoMessage() {}

func (x *CreateOneWorkMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneWorkMomentResp.ProtoReflect.Descriptor instead.
func (*CreateOneWorkMomentResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{25}
}

func (x *CreateOneWorkMomentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteOneWorkMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *DeleteOneWorkMomentReq) Reset() {
	*x = DeleteOneWorkMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneWorkMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneWorkMomentReq) ProtoMessage() {}

func (x *DeleteOneWorkMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneWorkMomentReq.ProtoReflect.Descriptor instead.
func (*DeleteOneWorkMomentReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteOneWorkMomentReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *DeleteOneWorkMomentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteOneWorkMomentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type DeleteOneWorkMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteOneWorkMomentResp) Reset() {
	*x = DeleteOneWorkMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneWorkMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneWorkMomentResp) ProtoMessage() {}

func (x *DeleteOneWorkMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneWorkMomentResp.ProtoReflect.Descriptor instead.
func (*DeleteOneWorkMomentResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteOneWorkMomentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type LikeOneWorkMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	WorkMomentID string `protobuf:"bytes,2,opt,name=WorkMomentID,proto3" json:"WorkMomentID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *LikeOneWorkMomentReq) Reset() {
	*x = LikeOneWorkMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeOneWorkMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeOneWorkMomentReq) ProtoMessage() {}

func (x *LikeOneWorkMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeOneWorkMomentReq.ProtoReflect.Descriptor instead.
func (*LikeOneWorkMomentReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{28}
}

func (x *LikeOneWorkMomentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LikeOneWorkMomentReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *LikeOneWorkMomentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type LikeOneWorkMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *LikeOneWorkMomentResp) Reset() {
	*x = LikeOneWorkMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeOneWorkMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeOneWorkMomentResp) ProtoMessage() {}

func (x *LikeOneWorkMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeOneWorkMomentResp.ProtoReflect.Descriptor instead.
func (*LikeOneWorkMomentResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{29}
}

func (x *LikeOneWorkMomentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type CommentOneWorkMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	WorkMomentID string `protobuf:"bytes,2,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	ReplyUserID  string `protobuf:"bytes,3,opt,name=replyUserID,proto3" json:"replyUserID,omitempty"`
	Content      string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	OperationID  string `protobuf:"bytes,5,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *CommentOneWorkMomentReq) Reset() {
	*x = CommentOneWorkMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOneWorkMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOneWorkMomentReq) ProtoMessage() {}

func (x *CommentOneWorkMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOneWorkMomentReq.ProtoReflect.Descriptor instead.
func (*CommentOneWorkMomentReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{30}
}

func (x *CommentOneWorkMomentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CommentOneWorkMomentReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *CommentOneWorkMomentReq) GetReplyUserID() string {
	if x != nil {
		return x.ReplyUserID
	}
	return ""
}

func (x *CommentOneWorkMomentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentOneWorkMomentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CommentOneWorkMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *CommentOneWorkMomentResp) Reset() {
	*x = CommentOneWorkMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOneWorkMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOneWorkMomentResp) ProtoMessage() {}

func (x *CommentOneWorkMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOneWorkMomentResp.ProtoReflect.Descriptor instead.
func (*CommentOneWorkMomentResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{31}
}

func (x *CommentOneWorkMomentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	ContentID    string `protobuf:"bytes,2,opt,name=contentID,proto3" json:"contentID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
	OperationID  string `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *DeleteCommentReq) Reset() {
	*x = DeleteCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReq) ProtoMessage() {}

func (x *DeleteCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteCommentReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *DeleteCommentReq) GetContentID() string {
	if x != nil {
		return x.ContentID
	}
	return ""
}

func (x *DeleteCommentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteCommentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type DeleteCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteCommentResp) Reset() {
	*x = DeleteCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResp) ProtoMessage() {}

func (x *DeleteCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResp.ProtoReflect.Descriptor instead.
func (*DeleteCommentResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteCommentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetWorkMomentByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetWorkMomentByIDReq) Reset() {
	*x = GetWorkMomentByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkMomentByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkMomentByIDReq) ProtoMessage() {}

func (x *GetWorkMomentByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkMomentByIDReq.ProtoReflect.Descriptor instead.
func (*GetWorkMomentByIDReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{34}
}

func (x *GetWorkMomentByIDReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *GetWorkMomentByIDReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetWorkMomentByIDReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetWorkMomentByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	WorkMoment *WorkMoment `protobuf:"bytes,2,opt,name=workMoment,proto3" json:"workMoment,omitempty"`
}

func (x *GetWorkMomentByIDResp) Reset() {
	*x = GetWorkMomentByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkMomentByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkMomentByIDResp) ProtoMessage() {}

func (x *GetWorkMomentByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkMomentByIDResp.ProtoReflect.Descriptor instead.
func (*GetWorkMomentByIDResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{35}
}

func (x *GetWorkMomentByIDResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetWorkMomentByIDResp) GetWorkMoment() *WorkMoment {
	if x != nil {
		return x.WorkMoment
	}
	return nil
}

type ChangeWorkMomentPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkMomentID         string   `protobuf:"bytes,1,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	OpUserID             string   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
	Permission           int32    `protobuf:"varint,3,opt,name=permission,proto3" json:"permission,omitempty"`
	PermissionUserIDList []string `protobuf:"bytes,4,rep,name=permissionUserIDList,proto3" json:"permissionUserIDList,omitempty"`
	OperationID          string   `protobuf:"bytes,5,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *ChangeWorkMomentPermissionReq) Reset() {
	*x = ChangeWorkMomentPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWorkMomentPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWorkMomentPermissionReq) ProtoMessage() {}

func (x *ChangeWorkMomentPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWorkMomentPermissionReq.ProtoReflect.Descriptor instead.
func (*ChangeWorkMomentPermissionReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeWorkMomentPermissionReq) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *ChangeWorkMomentPermissionReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *ChangeWorkMomentPermissionReq) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *ChangeWorkMomentPermissionReq) GetPermissionUserIDList() []string {
	if x != nil {
		return x.PermissionUserIDList
	}
	return nil
}

func (x *ChangeWorkMomentPermissionReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type ChangeWorkMomentPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ChangeWorkMomentPermissionResp) Reset() {
	*x = ChangeWorkMomentPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWorkMomentPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWorkMomentPermissionResp) ProtoMessage() {}

func (x *ChangeWorkMomentPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWorkMomentPermissionResp.ProtoReflect.Descriptor instead.
func (*ChangeWorkMomentPermissionResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{37}
}

func (x *ChangeWorkMomentPermissionResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserWorkMomentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string                    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	OpUserID    string                    `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID string                    `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetUserWorkMomentsReq) Reset() {
	*x = GetUserWorkMomentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWorkMomentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWorkMomentsReq) ProtoMessage() {}

func (x *GetUserWorkMomentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWorkMomentsReq.ProtoReflect.Descriptor instead.
func (*GetUserWorkMomentsReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{38}
}

func (x *GetUserWorkMomentsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserWorkMomentsReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUserWorkMomentsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserWorkMomentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserWorkMomentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	WorkMoments []*WorkMoment              `protobuf:"bytes,2,rep,name=workMoments,proto3" json:"workMoments,omitempty"`
	Pagination  *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetUserWorkMomentsResp) Reset() {
	*x = GetUserWorkMomentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWorkMomentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWorkMomentsResp) ProtoMessage() {}

func (x *GetUserWorkMomentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWorkMomentsResp.ProtoReflect.Descriptor instead.
func (*GetUserWorkMomentsResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserWorkMomentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserWorkMomentsResp) GetWorkMoments() []*WorkMoment {
	if x != nil {
		return x.WorkMoments
	}
	return nil
}

func (x *GetUserWorkMomentsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetUserFriendWorkMomentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string                    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID string                    `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetUserFriendWorkMomentsReq) Reset() {
	*x = GetUserFriendWorkMomentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFriendWorkMomentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFriendWorkMomentsReq) ProtoMessage() {}

func (x *GetUserFriendWorkMomentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFriendWorkMomentsReq.ProtoReflect.Descriptor instead.
func (*GetUserFriendWorkMomentsReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{40}
}

func (x *GetUserFriendWorkMomentsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserFriendWorkMomentsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserFriendWorkMomentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserFriendWorkMomentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	WorkMoments []*WorkMoment              `protobuf:"bytes,2,rep,name=workMoments,proto3" json:"workMoments,omitempty"`
	Pagination  *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetUserFriendWorkMomentsResp) Reset() {
	*x = GetUserFriendWorkMomentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFriendWorkMomentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFriendWorkMomentsResp) ProtoMessage() {}

func (x *GetUserFriendWorkMomentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFriendWorkMomentsResp.ProtoReflect.Descriptor instead.
func (*GetUserFriendWorkMomentsResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{41}
}

func (x *GetUserFriendWorkMomentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserFriendWorkMomentsResp) GetWorkMoments() []*WorkMoment {
	if x != nil {
		return x.WorkMoments
	}
	return nil
}

func (x *GetUserFriendWorkMomentsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type WorkMomentNotificationMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationMsgType int32  `protobuf:"varint,1,opt,name=notificationMsgType,proto3" json:"notificationMsgType,omitempty"`
	ReplyUserName       string `protobuf:"bytes,2,opt,name=replyUserName,proto3" json:"replyUserName,omitempty"`
	ReplyUserID         string `protobuf:"bytes,3,opt,name=replyUserID,proto3" json:"replyUserID,omitempty"`
	Content             string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	ContentID           string `protobuf:"bytes,5,opt,name=contentID,proto3" json:"contentID,omitempty"`
	WorkMomentID        string `protobuf:"bytes,6,opt,name=workMomentID,proto3" json:"workMomentID,omitempty"`
	UserID              string `protobuf:"bytes,7,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName            string `protobuf:"bytes,8,opt,name=userName,proto3" json:"userName,omitempty"`
	FaceURL             string `protobuf:"bytes,9,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	WorkMomentContent   string `protobuf:"bytes,10,opt,name=workMomentContent,proto3" json:"workMomentContent,omitempty"`
	CreateTime          int32  `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *WorkMomentNotificationMsg) Reset() {
	*x = WorkMomentNotificationMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkMomentNotificationMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkMomentNotificationMsg) ProtoMessage() {}

func (x *WorkMomentNotificationMsg) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkMomentNotificationMsg.ProtoReflect.Descriptor instead.
func (*WorkMomentNotificationMsg) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{42}
}

func (x *WorkMomentNotificationMsg) GetNotificationMsgType() int32 {
	if x != nil {
		return x.NotificationMsgType
	}
	return 0
}

func (x *WorkMomentNotificationMsg) GetReplyUserName() string {
	if x != nil {
		return x.ReplyUserName
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetReplyUserID() string {
	if x != nil {
		return x.ReplyUserID
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetContentID() string {
	if x != nil {
		return x.ContentID
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetWorkMomentID() string {
	if x != nil {
		return x.WorkMomentID
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetWorkMomentContent() string {
	if x != nil {
		return x.WorkMomentContent
	}
	return ""
}

func (x *WorkMomentNotificationMsg) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SetUserWorkMomentsLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Level       int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *SetUserWorkMomentsLevelReq) Reset() {
	*x = SetUserWorkMomentsLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserWorkMomentsLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserWorkMomentsLevelReq) ProtoMessage() {}

func (x *SetUserWorkMomentsLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserWorkMomentsLevelReq.ProtoReflect.Descriptor instead.
func (*SetUserWorkMomentsLevelReq) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{43}
}

func (x *SetUserWorkMomentsLevelReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetUserWorkMomentsLevelReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SetUserWorkMomentsLevelReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SetUserWorkMomentsLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *SetUserWorkMomentsLevelResp) Reset() {
	*x = SetUserWorkMomentsLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_office_office_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserWorkMomentsLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserWorkMomentsLevelResp) ProtoMessage() {}

func (x *SetUserWorkMomentsLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_office_office_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserWorkMomentsLevelResp.ProtoReflect.Descriptor instead.
func (*SetUserWorkMomentsLevelResp) Descriptor() ([]byte, []int) {
	return file_office_office_proto_rawDescGZIP(), []int{44}
}

func (x *SetUserWorkMomentsLevelResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

var File_office_office_proto protoreflect.FileDescriptor

var file_office_office_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x1a, 0x28, 0x4f,
	0x70, 0x65, 0x6e, 0x2d, 0x49, 0x4d, 0x2d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x5f, 0x77, 0x73, 0x2f, 0x77,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x3d, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x82,
	0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd1, 0x01,
	0x0a, 0x09, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x40, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x61,
	0x67, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x52, 0x0b, 0x74, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x22, 0x63, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1d, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x3e,
	0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46,
	0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x49, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x0e, 0x57,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x8c, 0x04, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65,
	0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55,
	0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x6c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x6c, 0x69, 0x6b, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x6e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x74, 0x0a, 0x14, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x6e,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x15,
	0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x4e, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x92, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x78, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0x54, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xc9, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xcf, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x03, 0x0a, 0x19, 0x57,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2c, 0x0a, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1a, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc8, 0x0a, 0x0a, 0x0d,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x14, 0x2e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x14, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x54, 0x61,
	0x67, 0x12, 0x16, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x32, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x44, 0x12, 0x19, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x44, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x1a, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x62, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x2e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x21, 0x5a, 0x1f, 0x4f, 0x70, 0x65, 0x6e, 0x5f, 0x49,
	0x4d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x3b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_office_office_proto_rawDescOnce sync.Once
	file_office_office_proto_rawDescData = file_office_office_proto_rawDesc
)

func file_office_office_proto_rawDescGZIP() []byte {
	file_office_office_proto_rawDescOnce.Do(func() {
		file_office_office_proto_rawDescData = protoimpl.X.CompressGZIP(file_office_office_proto_rawDescData)
	})
	return file_office_office_proto_rawDescData
}

var file_office_office_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_office_office_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                     // 0: office.CommonResp
	(*TagUser)(nil),                        // 1: office.TagUser
	(*Tag)(nil),                            // 2: office.Tag
	(*GetUserTagsReq)(nil),                 // 3: office.GetUserTagsReq
	(*GetUserTagsResp)(nil),                // 4: office.GetUserTagsResp
	(*CreateTagReq)(nil),                   // 5: office.CreateTagReq
	(*CreateTagResp)(nil),                  // 6: office.CreateTagResp
	(*DeleteTagReq)(nil),                   // 7: office.DeleteTagReq
	(*DeleteTagResp)(nil),                  // 8: office.DeleteTagResp
	(*SetTagReq)(nil),                      // 9: office.SetTagReq
	(*SetTagResp)(nil),                     // 10: office.SetTagResp
	(*SendMsg2TagReq)(nil),                 // 11: office.SendMsg2TagReq
	(*SendMsg2TagResp)(nil),                // 12: office.SendMsg2TagResp
	(*GetTagSendLogsReq)(nil),              // 13: office.GetTagSendLogsReq
	(*TagSendLog)(nil),                     // 14: office.TagSendLog
	(*GetTagSendLogsResp)(nil),             // 15: office.GetTagSendLogsResp
	(*GetUserTagByIDReq)(nil),              // 16: office.GetUserTagByIDReq
	(*GetUserTagByIDResp)(nil),             // 17: office.GetUserTagByIDResp
	(*LikeUser)(nil),                       // 18: office.LikeUser
	(*NotificationUser)(nil),               // 19: office.NotificationUser
	(*Comment)(nil),                        // 20: office.Comment
	(*PermissionGroup)(nil),                // 21: office.PermissionGroup
	(*WorkMomentUser)(nil),                 // 22: office.WorkMomentUser
	(*WorkMoment)(nil),                     // 23: office.WorkMoment
	(*CreateOneWorkMomentReq)(nil),         // 24: office.CreateOneWorkMomentReq
	(*CreateOneWorkMomentResp)(nil),        // 25: office.CreateOneWorkMomentResp
	(*DeleteOneWorkMomentReq)(nil),         // 26: office.DeleteOneWorkMomentReq
	(*DeleteOneWorkMomentResp)(nil),        // 27: office.DeleteOneWorkMomentResp
	(*LikeOneWorkMomentReq)(nil),           // 28: office.LikeOneWorkMomentReq
	(*LikeOneWorkMomentResp)(nil),          // 29: office.LikeOneWorkMomentResp
	(*CommentOneWorkMomentReq)(nil),        // 30: office.CommentOneWorkMomentReq
	(*CommentOneWorkMomentResp)(nil),       // 31: office.CommentOneWorkMomentResp
	(*DeleteCommentReq)(nil),               // 32: office.DeleteCommentReq
	(*DeleteCommentResp)(nil),              // 33: office.DeleteCommentResp
	(*GetWorkMomentByIDReq)(nil),           // 34: office.GetWorkMomentByIDReq
	(*GetWorkMomentByIDResp)(nil),          // 35: office.GetWorkMomentByIDResp
	(*ChangeWorkMomentPermissionReq)(nil),  // 36: office.ChangeWorkMomentPermissionReq
	(*ChangeWorkMomentPermissionResp)(nil), // 37: office.ChangeWorkMomentPermissionResp
	(*GetUserWorkMomentsReq)(nil),          // 38: office.GetUserWorkMomentsReq
	(*GetUserWorkMomentsResp)(nil),         // 39: office.GetUserWorkMomentsResp
	(*GetUserFriendWorkMomentsReq)(nil),    // 40: office.GetUserFriendWorkMomentsReq
	(*GetUserFriendWorkMomentsResp)(nil),   // 41: office.GetUserFriendWorkMomentsResp
	(*WorkMomentNotificationMsg)(nil),      // 42: office.WorkMomentNotificationMsg
	(*SetUserWorkMomentsLevelReq)(nil),     // 43: office.SetUserWorkMomentsLevelReq
	(*SetUserWorkMomentsLevelResp)(nil),    // 44: office.SetUserWorkMomentsLevelResp
	(*sdk_ws.RequestPagination)(nil),       // 45: server_api_params.RequestPagination
	(*sdk_ws.ResponsePagination)(nil),      // 46: server_api_params.ResponsePagination
}
var file_office_office_proto_depIdxs = []int32{
	1,  // 0: office.Tag.userList:type_name -> office.TagUser
	0,  // 1: office.GetUserTagsResp.commonResp:type_name -> office.CommonResp
	2,  // 2: office.GetUserTagsResp.tags:type_name -> office.Tag
	0,  // 3: office.CreateTagResp.commonResp:type_name -> office.CommonResp
	0,  // 4: office.DeleteTagResp.commonResp:type_name -> office.CommonResp
	0,  // 5: office.SetTagResp.commonResp:type_name -> office.CommonResp
	0,  // 6: office.SendMsg2TagResp.commonResp:type_name -> office.CommonResp
	45, // 7: office.GetTagSendLogsReq.Pagination:type_name -> server_api_params.RequestPagination
	1,  // 8: office.TagSendLog.userList:type_name -> office.TagUser
	0,  // 9: office.GetTagSendLogsResp.commonResp:type_name -> office.CommonResp
	46, // 10: office.GetTagSendLogsResp.Pagination:type_name -> server_api_params.ResponsePagination
	14, // 11: office.GetTagSendLogsResp.tagSendLogs:type_name -> office.TagSendLog
	0,  // 12: office.GetUserTagByIDResp.commonResp:type_name -> office.CommonResp
	2,  // 13: office.GetUserTagByIDResp.tag:type_name -> office.Tag
	22, // 14: office.WorkMoment.likeUserList:type_name -> office.WorkMomentUser
	20, // 15: office.WorkMoment.comments:type_name -> office.Comment
	22, // 16: office.WorkMoment.permissionUserList:type_name -> office.WorkMomentUser
	21, // 17: office.WorkMoment.permissionGroupList:type_name -> office.PermissionGroup
	22, // 18: office.WorkMoment.atUserList:type_name -> office.WorkMomentUser
	23, // 19: office.CreateOneWorkMomentReq.workMoment:type_name -> office.WorkMoment
	0,  // 20: office.CreateOneWorkMomentResp.commonResp:type_name -> office.CommonResp
	0,  // 21: office.DeleteOneWorkMomentResp.commonResp:type_name -> office.CommonResp
	0,  // 22: office.LikeOneWorkMomentResp.commonResp:type_name -> office.CommonResp
	0,  // 23: office.CommentOneWorkMomentResp.commonResp:type_name -> office.CommonResp
	0,  // 24: office.DeleteCommentResp.commonResp:type_name -> office.CommonResp
	0,  // 25: office.GetWorkMomentByIDResp.commonResp:type_name -> office.CommonResp
	23, // 26: office.GetWorkMomentByIDResp.workMoment:type_name -> office.WorkMoment
	0,  // 27: office.ChangeWorkMomentPermissionResp.commonResp:type_name -> office.CommonResp
	45, // 28: office.GetUserWorkMomentsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 29: office.GetUserWorkMomentsResp.commonResp:type_name -> office.CommonResp
	23, // 30: office.GetUserWorkMomentsResp.workMoments:type_name -> office.WorkMoment
	46, // 31: office.GetUserWorkMomentsResp.Pagination:type_name -> server_api_params.ResponsePagination
	45, // 32: office.GetUserFriendWorkMomentsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 33: office.GetUserFriendWorkMomentsResp.commonResp:type_name -> office.CommonResp
	23, // 34: office.GetUserFriendWorkMomentsResp.workMoments:type_name -> office.WorkMoment
	46, // 35: office.GetUserFriendWorkMomentsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,  // 36: office.SetUserWorkMomentsLevelResp.commonResp:type_name -> office.CommonResp
	3,  // 37: office.OfficeService.GetUserTags:input_type -> office.GetUserTagsReq
	5,  // 38: office.OfficeService.CreateTag:input_type -> office.CreateTagReq
	7,  // 39: office.OfficeService.DeleteTag:input_type -> office.DeleteTagReq
	9,  // 40: office.OfficeService.SetTag:input_type -> office.SetTagReq
	11, // 41: office.OfficeService.SendMsg2Tag:input_type -> office.SendMsg2TagReq
	13, // 42: office.OfficeService.GetTagSendLogs:input_type -> office.GetTagSendLogsReq
	16, // 43: office.OfficeService.GetUserTagByID:input_type -> office.GetUserTagByIDReq
	24, // 44: office.OfficeService.CreateOneWorkMoment:input_type -> office.CreateOneWorkMomentReq
	26, // 45: office.OfficeService.DeleteOneWorkMoment:input_type -> office.DeleteOneWorkMomentReq
	28, // 46: office.OfficeService.LikeOneWorkMoment:input_type -> office.LikeOneWorkMomentReq
	30, // 47: office.OfficeService.CommentOneWorkMoment:input_type -> office.CommentOneWorkMomentReq
	32, // 48: office.OfficeService.DeleteComment:input_type -> office.DeleteCommentReq
	34, // 49: office.OfficeService.GetWorkMomentByID:input_type -> office.GetWorkMomentByIDReq
	36, // 50: office.OfficeService.ChangeWorkMomentPermission:input_type -> office.ChangeWorkMomentPermissionReq
	38, // 51: office.OfficeService.GetUserWorkMoments:input_type -> office.GetUserWorkMomentsReq
	40, // 52: office.OfficeService.GetUserFriendWorkMoments:input_type -> office.GetUserFriendWorkMomentsReq
	43, // 53: office.OfficeService.SetUserWorkMomentsLevel:input_type -> office.SetUserWorkMomentsLevelReq
	4,  // 54: office.OfficeService.GetUserTags:output_type -> office.GetUserTagsResp
	6,  // 55: office.OfficeService.CreateTag:output_type -> office.CreateTagResp
	8,  // 56: office.OfficeService.DeleteTag:output_type -> office.DeleteTagResp
	10, // 57: office.OfficeService.SetTag:output_type -> office.SetTagResp
	12, // 58: office.OfficeService.SendMsg2Tag:output_type -> office.SendMsg2TagResp
	15, // 59: office.OfficeService.GetTagSendLogs:output_type -> office.GetTagSendLogsResp
	17, // 60: office.OfficeService.GetUserTagByID:output_type -> office.GetUserTagByIDResp
	25, // 61: office.OfficeService.CreateOneWorkMoment:output_type -> office.CreateOneWorkMomentResp
	27, // 62: office.OfficeService.DeleteOneWorkMoment:output_type -> office.DeleteOneWorkMomentResp
	29, // 63: office.OfficeService.LikeOneWorkMoment:output_type -> office.LikeOneWorkMomentResp
	31, // 64: office.OfficeService.CommentOneWorkMoment:output_type -> office.CommentOneWorkMomentResp
	33, // 65: office.OfficeService.DeleteComment:output_type -> office.DeleteCommentResp
	35, // 66: office.OfficeService.GetWorkMomentByID:output_type -> office.GetWorkMomentByIDResp
	37, // 67: office.OfficeService.ChangeWorkMomentPermission:output_type -> office.ChangeWorkMomentPermissionResp
	39, // 68: office.OfficeService.GetUserWorkMoments:output_type -> office.GetUserWorkMomentsResp
	41, // 69: office.OfficeService.GetUserFriendWorkMoments:output_type -> office.GetUserFriendWorkMomentsResp
	44, // 70: office.OfficeService.SetUserWorkMomentsLevel:output_type -> office.SetUserWorkMomentsLevelResp
	54, // [54:71] is the sub-list for method output_type
	37, // [37:54] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_office_office_proto_init() }
func file_office_office_proto_init() {
	if File_office_office_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_office_office_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsg2TagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsg2TagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagSendLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagSendLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagSendLogsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTagByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTagByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkMomentUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkMoment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOneWorkMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOneWorkMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneWorkMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneWorkMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeOneWorkMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeOneWorkMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOneWorkMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOneWorkMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkMomentByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkMomentByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWorkMomentPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWorkMomentPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWorkMomentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWorkMomentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFriendWorkMomentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFriendWorkMomentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkMomentNotificationMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserWorkMomentsLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_office_office_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserWorkMomentsLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_office_office_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_office_office_proto_goTypes,
		DependencyIndexes: file_office_office_proto_depIdxs,
		MessageInfos:      file_office_office_proto_msgTypes,
	}.Build()
	File_office_office_proto = out.File
	file_office_office_proto_rawDesc = nil
	file_office_office_proto_goTypes = nil
	file_office_office_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OfficeServiceClient is the client API for OfficeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OfficeServiceClient interface {
	GetUserTags(ctx context.Context, in *GetUserTagsReq, opts ...grpc.CallOption) (*GetUserTagsResp, error)
	CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error)
	DeleteTag(ctx context.Context, in *DeleteTagReq, opts ...grpc.CallOption) (*DeleteTagResp, error)
	SetTag(ctx context.Context, in *SetTagReq, opts ...grpc.CallOption) (*SetTagResp, error)
	SendMsg2Tag(ctx context.Context, in *SendMsg2TagReq, opts ...grpc.CallOption) (*SendMsg2TagResp, error)
	GetTagSendLogs(ctx context.Context, in *GetTagSendLogsReq, opts ...grpc.CallOption) (*GetTagSendLogsResp, error)
	GetUserTagByID(ctx context.Context, in *GetUserTagByIDReq, opts ...grpc.CallOption) (*GetUserTagByIDResp, error)
	CreateOneWorkMoment(ctx context.Context, in *CreateOneWorkMomentReq, opts ...grpc.CallOption) (*CreateOneWorkMomentResp, error)
	DeleteOneWorkMoment(ctx context.Context, in *DeleteOneWorkMomentReq, opts ...grpc.CallOption) (*DeleteOneWorkMomentResp, error)
	LikeOneWorkMoment(ctx context.Context, in *LikeOneWorkMomentReq, opts ...grpc.CallOption) (*LikeOneWorkMomentResp, error)
	CommentOneWorkMoment(ctx context.Context, in *CommentOneWorkMomentReq, opts ...grpc.CallOption) (*CommentOneWorkMomentResp, error)
	DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error)
	GetWorkMomentByID(ctx context.Context, in *GetWorkMomentByIDReq, opts ...grpc.CallOption) (*GetWorkMomentByIDResp, error)
	ChangeWorkMomentPermission(ctx context.Context, in *ChangeWorkMomentPermissionReq, opts ...grpc.CallOption) (*ChangeWorkMomentPermissionResp, error)
	/// user self
	GetUserWorkMoments(ctx context.Context, in *GetUserWorkMomentsReq, opts ...grpc.CallOption) (*GetUserWorkMomentsResp, error)
	/// users friend
	GetUserFriendWorkMoments(ctx context.Context, in *GetUserFriendWorkMomentsReq, opts ...grpc.CallOption) (*GetUserFriendWorkMomentsResp, error)
	SetUserWorkMomentsLevel(ctx context.Context, in *SetUserWorkMomentsLevelReq, opts ...grpc.CallOption) (*SetUserWorkMomentsLevelResp, error)
}

type officeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOfficeServiceClient(cc grpc.ClientConnInterface) OfficeServiceClient {
	return &officeServiceClient{cc}
}

func (c *officeServiceClient) GetUserTags(ctx context.Context, in *GetUserTagsReq, opts ...grpc.CallOption) (*GetUserTagsResp, error) {
	out := new(GetUserTagsResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetUserTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error) {
	out := new(CreateTagResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/CreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteTag(ctx context.Context, in *DeleteTagReq, opts ...grpc.CallOption) (*DeleteTagResp, error) {
	out := new(DeleteTagResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SetTag(ctx context.Context, in *SetTagReq, opts ...grpc.CallOption) (*SetTagResp, error) {
	out := new(SetTagResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SendMsg2Tag(ctx context.Context, in *SendMsg2TagReq, opts ...grpc.CallOption) (*SendMsg2TagResp, error) {
	out := new(SendMsg2TagResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/SendMsg2Tag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetTagSendLogs(ctx context.Context, in *GetTagSendLogsReq, opts ...grpc.CallOption) (*GetTagSendLogsResp, error) {
	out := new(GetTagSendLogsResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetTagSendLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserTagByID(ctx context.Context, in *GetUserTagByIDReq, opts ...grpc.CallOption) (*GetUserTagByIDResp, error) {
	out := new(GetUserTagByIDResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetUserTagByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CreateOneWorkMoment(ctx context.Context, in *CreateOneWorkMomentReq, opts ...grpc.CallOption) (*CreateOneWorkMomentResp, error) {
	out := new(CreateOneWorkMomentResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/CreateOneWorkMoment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteOneWorkMoment(ctx context.Context, in *DeleteOneWorkMomentReq, opts ...grpc.CallOption) (*DeleteOneWorkMomentResp, error) {
	out := new(DeleteOneWorkMomentResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/DeleteOneWorkMoment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) LikeOneWorkMoment(ctx context.Context, in *LikeOneWorkMomentReq, opts ...grpc.CallOption) (*LikeOneWorkMomentResp, error) {
	out := new(LikeOneWorkMomentResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/LikeOneWorkMoment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CommentOneWorkMoment(ctx context.Context, in *CommentOneWorkMomentReq, opts ...grpc.CallOption) (*CommentOneWorkMomentResp, error) {
	out := new(CommentOneWorkMomentResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/CommentOneWorkMoment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error) {
	out := new(DeleteCommentResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetWorkMomentByID(ctx context.Context, in *GetWorkMomentByIDReq, opts ...grpc.CallOption) (*GetWorkMomentByIDResp, error) {
	out := new(GetWorkMomentByIDResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetWorkMomentByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) ChangeWorkMomentPermission(ctx context.Context, in *ChangeWorkMomentPermissionReq, opts ...grpc.CallOption) (*ChangeWorkMomentPermissionResp, error) {
	out := new(ChangeWorkMomentPermissionResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/ChangeWorkMomentPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserWorkMoments(ctx context.Context, in *GetUserWorkMomentsReq, opts ...grpc.CallOption) (*GetUserWorkMomentsResp, error) {
	out := new(GetUserWorkMomentsResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetUserWorkMoments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserFriendWorkMoments(ctx context.Context, in *GetUserFriendWorkMomentsReq, opts ...grpc.CallOption) (*GetUserFriendWorkMomentsResp, error) {
	out := new(GetUserFriendWorkMomentsResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/GetUserFriendWorkMoments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SetUserWorkMomentsLevel(ctx context.Context, in *SetUserWorkMomentsLevelReq, opts ...grpc.CallOption) (*SetUserWorkMomentsLevelResp, error) {
	out := new(SetUserWorkMomentsLevelResp)
	err := c.cc.Invoke(ctx, "/office.OfficeService/SetUserWorkMomentsLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OfficeServiceServer is the server API for OfficeService service.
type OfficeServiceServer interface {
	GetUserTags(context.Context, *GetUserTagsReq) (*GetUserTagsResp, error)
	CreateTag(context.Context, *CreateTagReq) (*CreateTagResp, error)
	DeleteTag(context.Context, *DeleteTagReq) (*DeleteTagResp, error)
	SetTag(context.Context, *SetTagReq) (*SetTagResp, error)
	SendMsg2Tag(context.Context, *SendMsg2TagReq) (*SendMsg2TagResp, error)
	GetTagSendLogs(context.Context, *GetTagSendLogsReq) (*GetTagSendLogsResp, error)
	GetUserTagByID(context.Context, *GetUserTagByIDReq) (*GetUserTagByIDResp, error)
	CreateOneWorkMoment(context.Context, *CreateOneWorkMomentReq) (*CreateOneWorkMomentResp, error)
	DeleteOneWorkMoment(context.Context, *DeleteOneWorkMomentReq) (*DeleteOneWorkMomentResp, error)
	LikeOneWorkMoment(context.Context, *LikeOneWorkMomentReq) (*LikeOneWorkMomentResp, error)
	CommentOneWorkMoment(context.Context, *CommentOneWorkMomentReq) (*CommentOneWorkMomentResp, error)
	DeleteComment(context.Context, *DeleteCommentReq) (*DeleteCommentResp, error)
	GetWorkMomentByID(context.Context, *GetWorkMomentByIDReq) (*GetWorkMomentByIDResp, error)
	ChangeWorkMomentPermission(context.Context, *ChangeWorkMomentPermissionReq) (*ChangeWorkMomentPermissionResp, error)
	/// user self
	GetUserWorkMoments(context.Context, *GetUserWorkMomentsReq) (*GetUserWorkMomentsResp, error)
	/// users friend
	GetUserFriendWorkMoments(context.Context, *GetUserFriendWorkMomentsReq) (*GetUserFriendWorkMomentsResp, error)
	SetUserWorkMomentsLevel(context.Context, *SetUserWorkMomentsLevelReq) (*SetUserWorkMomentsLevelResp, error)
}

// UnimplementedOfficeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOfficeServiceServer struct {
}

func (*UnimplementedOfficeServiceServer) GetUserTags(context.Context, *GetUserTagsReq) (*GetUserTagsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTags not implemented")
}
func (*UnimplementedOfficeServiceServer) CreateTag(context.Context, *CreateTagReq) (*CreateTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTag not implemented")
}
func (*UnimplementedOfficeServiceServer) DeleteTag(context.Context, *DeleteTagReq) (*DeleteTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedOfficeServiceServer) SetTag(context.Context, *SetTagReq) (*SetTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedOfficeServiceServer) SendMsg2Tag(context.Context, *SendMsg2TagReq) (*SendMsg2TagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg2Tag not implemented")
}
func (*UnimplementedOfficeServiceServer) GetTagSendLogs(context.Context, *GetTagSendLogsReq) (*GetTagSendLogsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTagSendLogs not implemented")
}
func (*UnimplementedOfficeServiceServer) GetUserTagByID(context.Context, *GetUserTagByIDReq) (*GetUserTagByIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTagByID not implemented")
}
func (*UnimplementedOfficeServiceServer) CreateOneWorkMoment(context.Context, *CreateOneWorkMomentReq) (*CreateOneWorkMomentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOneWorkMoment not implemented")
}
func (*UnimplementedOfficeServiceServer) DeleteOneWorkMoment(context.Context, *DeleteOneWorkMomentReq) (*DeleteOneWorkMomentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOneWorkMoment not implemented")
}
func (*UnimplementedOfficeServiceServer) LikeOneWorkMoment(context.Context, *LikeOneWorkMomentReq) (*LikeOneWorkMomentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeOneWorkMoment not implemented")
}
func (*UnimplementedOfficeServiceServer) CommentOneWorkMoment(context.Context, *CommentOneWorkMomentReq) (*CommentOneWorkMomentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentOneWorkMoment not implemented")
}
func (*UnimplementedOfficeServiceServer) DeleteComment(context.Context, *DeleteCommentReq) (*DeleteCommentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedOfficeServiceServer) GetWorkMomentByID(context.Context, *GetWorkMomentByIDReq) (*GetWorkMomentByIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkMomentByID not implemented")
}
func (*UnimplementedOfficeServiceServer) ChangeWorkMomentPermission(context.Context, *ChangeWorkMomentPermissionReq) (*ChangeWorkMomentPermissionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeWorkMomentPermission not implemented")
}
func (*UnimplementedOfficeServiceServer) GetUserWorkMoments(context.Context, *GetUserWorkMomentsReq) (*GetUserWorkMomentsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserWorkMoments not implemented")
}
func (*UnimplementedOfficeServiceServer) GetUserFriendWorkMoments(context.Context, *GetUserFriendWorkMomentsReq) (*GetUserFriendWorkMomentsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFriendWorkMoments not implemented")
}
func (*UnimplementedOfficeServiceServer) SetUserWorkMomentsLevel(context.Context, *SetUserWorkMomentsLevelReq) (*SetUserWorkMomentsLevelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserWorkMomentsLevel not implemented")
}

func RegisterOfficeServiceServer(s *grpc.Server, srv OfficeServiceServer) {
	s.RegisterService(&_OfficeService_serviceDesc, srv)
}

func _OfficeService_GetUserTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTagsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserTags(ctx, req.(*GetUserTagsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CreateTag(ctx, req.(*CreateTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteTag(ctx, req.(*DeleteTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SetTag(ctx, req.(*SetTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SendMsg2Tag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsg2TagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SendMsg2Tag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SendMsg2Tag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SendMsg2Tag(ctx, req.(*SendMsg2TagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetTagSendLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagSendLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetTagSendLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetTagSendLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetTagSendLogs(ctx, req.(*GetTagSendLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserTagByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTagByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserTagByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserTagByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserTagByID(ctx, req.(*GetUserTagByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CreateOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CreateOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CreateOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CreateOneWorkMoment(ctx, req.(*CreateOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteOneWorkMoment(ctx, req.(*DeleteOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_LikeOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).LikeOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/LikeOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).LikeOneWorkMoment(ctx, req.(*LikeOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CommentOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CommentOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CommentOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CommentOneWorkMoment(ctx, req.(*CommentOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteComment(ctx, req.(*DeleteCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetWorkMomentByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkMomentByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetWorkMomentByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetWorkMomentByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetWorkMomentByID(ctx, req.(*GetWorkMomentByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_ChangeWorkMomentPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeWorkMomentPermissionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).ChangeWorkMomentPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/ChangeWorkMomentPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).ChangeWorkMomentPermission(ctx, req.(*ChangeWorkMomentPermissionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserWorkMoments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserWorkMomentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserWorkMoments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserWorkMoments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserWorkMoments(ctx, req.(*GetUserWorkMomentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserFriendWorkMoments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFriendWorkMomentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserFriendWorkMoments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserFriendWorkMoments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserFriendWorkMoments(ctx, req.(*GetUserFriendWorkMomentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SetUserWorkMomentsLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserWorkMomentsLevelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SetUserWorkMomentsLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SetUserWorkMomentsLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SetUserWorkMomentsLevel(ctx, req.(*SetUserWorkMomentsLevelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OfficeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "office.OfficeService",
	HandlerType: (*OfficeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserTags",
			Handler:    _OfficeService_GetUserTags_Handler,
		},
		{
			MethodName: "CreateTag",
			Handler:    _OfficeService_CreateTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _OfficeService_DeleteTag_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _OfficeService_SetTag_Handler,
		},
		{
			MethodName: "SendMsg2Tag",
			Handler:    _OfficeService_SendMsg2Tag_Handler,
		},
		{
			MethodName: "GetTagSendLogs",
			Handler:    _OfficeService_GetTagSendLogs_Handler,
		},
		{
			MethodName: "GetUserTagByID",
			Handler:    _OfficeService_GetUserTagByID_Handler,
		},
		{
			MethodName: "CreateOneWorkMoment",
			Handler:    _OfficeService_CreateOneWorkMoment_Handler,
		},
		{
			MethodName: "DeleteOneWorkMoment",
			Handler:    _OfficeService_DeleteOneWorkMoment_Handler,
		},
		{
			MethodName: "LikeOneWorkMoment",
			Handler:    _OfficeService_LikeOneWorkMoment_Handler,
		},
		{
			MethodName: "CommentOneWorkMoment",
			Handler:    _OfficeService_CommentOneWorkMoment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _OfficeService_DeleteComment_Handler,
		},
		{
			MethodName: "GetWorkMomentByID",
			Handler:    _OfficeService_GetWorkMomentByID_Handler,
		},
		{
			MethodName: "ChangeWorkMomentPermission",
			Handler:    _OfficeService_ChangeWorkMomentPermission_Handler,
		},
		{
			MethodName: "GetUserWorkMoments",
			Handler:    _OfficeService_GetUserWorkMoments_Handler,
		},
		{
			MethodName: "GetUserFriendWorkMoments",
			Handler:    _OfficeService_GetUserFriendWorkMoments_Handler,
		},
		{
			MethodName: "SetUserWorkMomentsLevel",
			Handler:    _OfficeService_SetUserWorkMomentsLevel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "office/office.proto",
}
